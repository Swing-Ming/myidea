<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--自动扫描&基于注解的bean以及DI-->
    <context:component-scan base-package="com.kaishengit">
        <!--扫描排除@Controller注解-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>


    </context:component-scan>

    <!--读取confige.properties文件-->
    <context:property-placeholder location="classpath:config.properties"/>

    <!--配置数据源（数据库连接池）-->
    <bean id= "dataSource"  class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
   </bean>

    <!--配置mybatis的SqlsessionFactory-->
    <bean id = "sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--将setDataSource注入到SqlsessinFacrory中-->
        <property name="dataSource" ref="dataSource"/>
        <!--将pojo中的所有类声明别名为类的名字-->
        <property name="typeAliasesPackage" value="com.kaishengit.pojo"/>
        <!--自动加载classpath中的mapper文件中的所有xml文件-->
     <!--   <property name="mapperLocations" value="classpath:mapper/*.xml"/>-->
    </bean>

    <!--自动扫描mapper，告诉mybatis mapper接口的位置 将所有的mapper放入spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.kaishengit.mapper"/>
    </bean>


    <!--JDBC事务管理器-->
    <bean id = "transactionMannger"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--基于注解的事务 @TransactinManager-->
    <tx:annotation-driven transaction-manager="transactionMannger"/>









</beans>